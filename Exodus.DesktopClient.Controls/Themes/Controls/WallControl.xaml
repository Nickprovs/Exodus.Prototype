<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Exodus.DesktopClient.Controls.Controls"
                    xmlns:types="clr-namespace:Exodus.DesktopClient.Data.Types;assembly=Exodus.DesktopClient.Data"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:prism="http://prismlibrary.com/">
    
    <Style TargetType="{x:Type controls:WallControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WallControl}">
                    
                    <Grid>
                        <ScrollViewer
                            x:Name="WallScrollViewer"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto"
                            CanContentScroll="True"
                            Background="{DynamicResource B2Brush}">
                            <controls:ZoomAndPanControl
                                x:Name="WallZoomAndPanControl"
                                ContentScale="{Binding Scale, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                ContentOffsetX="{Binding OffsetX, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                ContentOffsetY="{Binding OffsetY, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                ContentViewportWidth="{Binding ViewPortWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                ContentViewportHeight="{Binding ViewPortHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">

                                <Grid 
                                      x:Name="WallItemsControlContainerGrid"
                                      Background="{DynamicResource B3Brush}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Width="{Binding Wall.Width, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Height="{Binding Wall.Height, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ItemsControl
                                      Width="{Binding Wall.Width, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Height="{Binding Wall.Height, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ItemsSource="{Binding Wall.SourceInstances, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas
                                                    AllowDrop="True"
                                                    IsItemsHost="True" 
                                                    Background="Transparent"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <!--TODO Z-ORDER  <Setter Property="Panel.ZIndex" Value="{Binding ZOrder}" -->
                                            <Style TargetType="ContentPresenter">
                                                <Setter Property="Canvas.Left" Value="{Binding X}" />
                                                <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type types:DcSourceInstance}">
                                                <controls:SourceControl
                                                    SourceInstance="{Binding}"
                                                    Width="{Binding Width}"
                                                    Height="{Binding Height}"
                                                    ResizeSourceBorderThickness="{Binding ResizeSourceBorderThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=controls:WallControl}}">
                                                    <!--When there's an interaction on the source that the view model needs to here about... it's told through event. Then we fire a command through this control to the view model-->
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SourcePanned">
                                                            <prism:InvokeCommandAction Command="{Binding SourcePannedCommand, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=controls:WallControl}}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="SourceResized">
                                                            <prism:InvokeCommandAction Command="{Binding SourceResizedCommand, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=controls:WallControl}}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="SourceBringToFront">
                                                            <prism:InvokeCommandAction Command="{Binding SourceBringToFrontCommand, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=controls:WallControl}}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="SourceSendToBack">
                                                            <prism:InvokeCommandAction Command="{Binding SourceSendToBackCommand, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=controls:WallControl}}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="SourceRemove">
                                                            <prism:InvokeCommandAction Command="{Binding SourceRemoveCommand, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=controls:WallControl}}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </controls:SourceControl>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </controls:ZoomAndPanControl>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>